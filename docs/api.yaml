openapi: 3.0.2
info:
  title: OME Portal API
  version: '0.9.0'
servers:
  - url: http://localhost:8080
    description: Local mock server
  - url: http://localhost:8000/api/v1
    description: Local development server
  - url: https://marathon.online/api/v1
    description: Production server
  - url: https://dev.marathon.online/api/v1
    description: Development server
paths:
  /auth/me:
    get:
      summary: Get authenticated user
      tags:
        - Authentication
      responses:
        '200':
          description: Authenticated user JSON.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /roles:
    get:
      summary: Get list of roles and permissions
      tags:
        - Role and Permission
      responses:
        '200':
          description: List of roles and permissions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '403':
          description: Not has sufficient authorization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /roles/{id}:
    put:
      summary: Update permission for role.
      tags:
        - Role and Permission
      parameters:
        - name: id
          in: path
          description: Role ID you want to update
          schema:
            type: string
          required: true
      requestBody:
        description: Permission information/
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permissions'
      responses:
        '204':
          description: Success
        '404':
          description: Role not found
  /twitter/tweets:
    get:
      summary: Get tweets
      tags:
        - Twitter
      responses:
        '200':
          description: Get recently tweets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeline'
    post:
      summary: Post new tweet
      tags:
        - Twitter
      requestBody:
        description: Tweet content
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetRequest'
      responses:
        '200':
          description: Tweet content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweet'
        '422':
          description: Bad request content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /twitter/tweets/{id}:
    delete:
      summary: Delete tweet
      tags:
        - Twitter
      parameters:
        - name: id
          in: path
          description: Tweet id you want to delete
          schema:
            type: string
          required: true
      responses:
        '204':
          description: Success
        '404':
          description: Not Found
  /twitter/medias:
    post:
      summary: Upload media
      tags:
        - Twitter
      requestBody:
        description: Upload media data
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                media:
                  type: string
                  format: binary
      responses:
        '200':
          description: Success to upload media
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: '114080493040967680'
        '413':
          description: Image is too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
          example: 1
        username:
          type: string
          example: 'ユーザー'
        discord:
          $ref: '#/components/schemas/DiscordUser'
        permissions:
          $ref: '#/components/schemas/Permissions'
    DiscordUser:
      type: object
      properties:
        id:
          type: string
          example: '80351110224678912'
    Permissions:
      type: array
      items:
        type: string
        enum:
          - 'twitter'
          - 'admin'
    TwitterUploadMedia:
      type: object
      properties:
        mediaId:
          type: string
          example: '114080493040967680'
    Timeline:
      type: array
      items:
        $ref: '#/components/schemas/Tweet'
    Tweet:
      type: object
      properties:
        id:
          type: string
          example: '1050118621198921728'
        text:
          type: string
          example: To make room for more expression, we will now count all emojis as equal—including those with gender‍‍‍ ‍‍and skin t… https://t.co/MkGjXf9aXm
        medias:
          type: array
          items:
            $ref: '#/components/schemas/TwitterMedia'
            maxLength: 4
        createdAt:
          type: string
          format: date-time
          example: 2018-10-10T20:19:24Z
    TwitterMedia:
      type: object
      properties:
        id:
          type: string
          example: '861627472244162561'
        mediaUrl:
          type: string
          example: https://pbs.twimg.com/media/C_UdnvPUwAE3Dnn.jpg
        type:
          type: string
          enum: [photo, video, animated_gif]
          example: photo
    TweetRequest:
      type: object
      properties:
        text:
          type: string
          maxLength: 140
          example: This is example of tweet, URL will be t.co link wrapped.
        mediaIds:
          type: array
          items:
            type: string
            example: '114080493040967680'
      required:
        - text
    Role:
      type: object
      properties:
        id:
          type: string
          example: '41771983423143936'
        name:
          type: string
          example: 'WE DEM BOYZZ!!!!!!'
        permissions:
          $ref: '#/components/schemas/Permissions'
    Error:
      type: string
      example: The message about error.
